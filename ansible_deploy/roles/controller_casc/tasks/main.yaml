    - include_tasks: prepare.yaml

    - name: Fetch subscriptions from Red Hat Portal
      awx.awx.subscriptions:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        username: "{{ rh_user }}"
        password: "{{ rh_pass }}"
        filters:
          product_name: "Red Hat Ansible Automation Platform"
      register: subscriptions

    - name: Activate Ansible Automation Platform
      awx.awx.license:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        pool_id: "{{ pool_id }}"
        state: present

    - name: Create Organizations
      awx.awx.organization:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "group-{{ item }}"
        description: "group-{{ item }} organization" 
        state: present
      loop: "{{ range(11) | list }}"

    - name: Create Automation Hub credential for community content
      awx.awx.credential:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Private Automation Hub Api Token (community content) for group-{{ item }}"
        description: "Automation Hub Community Content Credential"
        organization: "group-{{ item }}"
        credential_type: "Ansible Galaxy/Automation Hub API Token"
        inputs:
          url: "https://{{ hub_host }}/api/galaxy/content/community/"
          token: "{{ ansible_facts.ah_token.token }}"
      loop: "{{ range(11) | list }}"


    - name: Create Automation Hub credential for custom content
      awx.awx.credential:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Private Automation Hub Api Token (custom content) for group-{{ item }}"
        description: "Automation Hub Custom Content Credential"
        organization: "group-{{ item }}"
        credential_type: "Ansible Galaxy/Automation Hub API Token"
        inputs:
          url: "https://{{ hub_host }}/api/galaxy/"
          token: "{{ ansible_facts.ah_token.token }}"
      loop: "{{ range(11) | list }}"

    - name: Associate Automation Hub Credentials to its organization
      awx.awx.organization:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "group-{{ item }}"
        description: "group-{{ item }} organization" 
        galaxy_credentials:
          - "Private Automation Hub Api Token (custom content) for group-{{ item }}"
          - "Private Automation Hub Api Token (community content) for group-{{ item }}"
        state: present
      loop: "{{ range(11) | list }}"

    - name: Create Users
      awx.awx.user:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        username: "group-{{ item }}"
        password: "Ansible-{{ item }}"
        state: present
        organization: "group-{{ item }}"
      loop: "{{ range(11) | list }}"

    - name: Configure RBAC
      awx.awx.role:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        user: "group-{{ item }}"
        role: admin
        organization: "group-{{ item }}"
        state: present
      loop: "{{ range(11) | list }}"

    - name: Create SCM credentials
      awx.awx.credential:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Git Repository Credential for group-{{ item }}"
        organization: "group-{{ item }}"
        state: present
        credential_type: Source Control
        inputs:
          username: "group-{{ item }}"
          password: "ansible"
      loop: "{{ range(11) | list }}"

    - name: Add Windows credentials
      awx.awx.credential:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Windows Machine Credential for group-{{ item }}"
        description: "group-{{ item }}"
        organization: "group-{{ item }}"
        credential_type: Machine
        inputs:
          username: "group-{{ item }}"
          password: "Ansible-{{ item }}"
        state: present
      loop: "{{ range(11) | list }}"

    - name: Create Projects
      awx.awx.project:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Project for group-{{ item }}"
        description: "Project based on the Git repository for group-{{ item }}"
        organization: "group-{{ item }}"
        credential: "Git Repository Credential for group-{{ item }}" 
        state: present
        scm_type: git
        scm_url: "https://gitea-gitea.apps.{{ base_domain }}/group-{{ item }}/group-{{ item }}-hackathon.git"
      loop: "{{ range(11) | list }}"
      when: item != 0

    - name: Create Windows inventories
      awx.awx.inventory:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Windows Inventory for group-{{ item }}"
        description: "Windows Inventory"
        organization: "group-{{ item }}"
        state: present
        variables:
          ansible_port: 5985
          ansible_connection: winrm
          ansible_winrm_transport: ntlm
      loop: "{{ range(11) | list }}"

    - name: Create localhost inventories
      awx.awx.inventory:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "Localhost Inventory for group-{{ item }}"
        description: "Localhost Inventory"
        organization: "group-{{ item }}"
        state: present
      loop: "{{ range(11) | list }}"

    - name: Add hosts to localhost inventories
      awx.awx.host:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "localhost"
        description: "localhost"
        inventory: "Localhost Inventory for group-{{ item }}"
        variables:
          ansible_connection: local
        state: present
      loop: "{{ range(11) | list }}"

    - name: Add hosts to Windows Inventories
      awx.awx.host:
        controller_host: "{{ aap_host }}"
        controller_username: "admin"
        controller_password: "{{ aap_pass }}"
        validate_certs: false
        name: "{{ instance }}"
        description: "Windows Host"
        inventory: "Windows Inventory for group-{{ item }}"
        state: present
      loop: "{{ range(11) | list }}"
