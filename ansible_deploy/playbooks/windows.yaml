---
- name: Configure Windows Instance
  hosts: windows
  gather_facts: yes

  tasks:

    - name: Create the AnsibleWinRM group for local users
      ansible.windows.win_group:
        name: AnsibleWinRM
        description: "Group for Ansible Users"
        state: present

    - name: Grant Read and Execute permissions for WinRM to the AnsibleWinRM group
      ansible.windows.win_shell: |
        $account = "AnsibleWinRM"
        $sddl = Get-Item -Path WSMan:\localhost\Service\RootSDDL
        $sd = New-Object System.Security.AccessControl.RawSecurityDescriptor($sddl.Value)
        $identity = New-Object System.Security.Principal.NTAccount($account)
        $sid = $identity.Translate([System.Security.Principal.SecurityIdentifier])
        # Define the generic access rights for Read and Execute
        $GENERIC_READ = 0x80000000
        $GENERIC_EXECUTE = 0x20000000
        $accessMask = $GENERIC_READ -bor $GENERIC_EXECUTE
        $ace = New-Object System.Security.AccessControl.CommonAce -ArgumentList @(
            [System.Security.AccessControl.AceFlags]::None,
            [System.Security.AccessControl.AceQualifier]::AccessAllowed,
            $accessMask,
            $sid,
            $false,
            $null
        )
        $sd.DiscretionaryAcl.InsertAce(0, $ace)
        $newSDDL = $sd.GetSddlForm("All")
        Set-Item -Path WSMan:\localhost\Service\RootSDDL -Value $newSDDL -Force -Confirm:$false
      args:
        executable: powershell

    - name: Create Users
      ansible.windows.win_user:
        name: "group-{{ item }}"
        password: "Ansible-{{ item }}"
        home_directory: "C:\\Users\\group-{{ item }}"
        state: present
        groups:
          - AnsibleWinRM
          - Users
          - "Remote Desktop Users"
      loop: "{{ range(10) | list }}"

    - name: Create User's Profiles
      community.windows.win_user_profile:
        username: "group-{{ item }}"
        state: present
      loop: "{{ range(10) | list }}"

    - name: Create Crowdstrike folders
      ansible.windows.win_file:
        path: "C:\\Users\\group-{{ item }}\\Crowdstrike"
        state: directory 
      loop: "{{ range(10) | list }}"

    - name: Find files in path
      ansible.windows.win_find:
        paths: "C:\\Users"
        patterns: 
          - '*.sys'
        recurse: true
      register: sys_files

    - name: Remove old files
      ansible.windows.win_file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ sys_files.files }}"

    - name: Create Crowdstrike Falcon Sensor files
      ansible.windows.win_file:
        path: "C:\\Users\\group-{{ item.0 }}\\Crowdstrike\\C-{{ '%08d' | format(item.1)}}{{ lookup('community.general.random_string', length=3, numbers=false, special=false, min_lower=3) }}.sys"
        state: touch
      loop: "{{ range(10) | product (range(1, 10)) | list }}"

    - name: Get list of all folders
      ansible.windows.win_find:
        paths: "C:\\Users\\"
        recurse: no
        file_type: directory
      register: folders_list

    - name: Process each folder to randomly select a file and set the timestamp provided
      ansible.windows.win_shell: |
        $files = Get-ChildItem -Path "{{ item }}\\Crowdstrike" -File
        $randomFile = $files | Get-Random
        $utcTime = Get-Date -Date "2024-07-22T13:17:00Z"
        $randomFile.LastWriteTime = $utcTime
        $randomFile.CreationTime = $utcTime
        $randomFile.LastAccessTime = $utcTime
      loop: "{{ folders_list.files | map(attribute='path') | list }}"
      when: '"group" in item' 
      args:
        executable: powershell.exe
