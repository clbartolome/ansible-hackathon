apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: exchange-rates
  annotations:
    description: "Exchange Rates application template"
    tags: "react,python"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "backend-${USER}"
      app.kubernetes.io/instance: "backend-${USER}"
    name: "backend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deployment: "backend-${USER}"
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "backend-${USER}"
      app.kubernetes.io/instance: "backend-${USER}"
      app.kubernetes.io/part-of: "echange-rates-${USER}"
      app.openshift.io/runtime: python
    name: "backend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: "backend-${USER}"
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          deployment: "backend-${USER}"
      spec:
        containers:
        - image: quay.io/calopezb/exchange-rates-back:1.0.0
          imagePullPolicy: Always
          name: "backend-${USER}"
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "backend-${USER}"
      app.kubernetes.io/instance: "backend-${USER}"
    name: "backend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    host: "api-${USER}.${HOST}"
    port:
      targetPort: 5000-tcp
    to:
      kind: Service
      name: "backend-${USER}"
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "frontend-${USER}"
      app.kubernetes.io/instance: "frontend-${USER}"
    name: "frontend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    ports:
    - name: 5000-tcp
      port: 5000
      protocol: TCP
      targetPort: 5000
    selector:
      deployment: "frontend-${USER}"
    type: ClusterIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "frontend-${USER}"
      app.kubernetes.io/instance: "frontend-${USER}"
      app.kubernetes.io/part-of: "echange-rates-${USER}"
      app.openshift.io/runtime: react
    name: "frontend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: "frontend-${USER}"
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          deployment: "frontend-${USER}"
      spec:
        containers:
        - image: quay.io/calopezb/exchange-rates-front:1.0.0
          imagePullPolicy: IfNotPresent
          name: "frontend-${USER}"
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /app/build/config/config.json
            name: config-volume
            subPath: REACT_CONFIG
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: "frontend-${USER}-cm"
          name: config-volume
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: "exchange-${USER}"
      app.kubernetes.io/component: "frontend-${USER}"
      app.kubernetes.io/instance: "frontend-${USER}"
    name: "frontend-${USER}"
    namespace: "${NAMESPACE}"
  spec:
    host: "web-${USER}.${HOST}"
    port:
      targetPort: 5000-tcp
    to:
      kind: Service
      name: "frontend-${USER}"
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      app: "exchange-${USER}"
    name: "frontend-${USER}-cm"
    namespace: "${NAMESPACE}"
  data:
    REACT_CONFIG: |
      {
        "REACT_APP_BACKEND": "http://api-${USER}.${HOST}"
      }
  immutable: false
parameters:
- name: USER
  description: User or group name
  required: true
- name: NAMESPACE
  description: Namespace to create resources in
  required: true
- name: HOST
  description: Openshift app host (apps.ocp4.example.com)
  required: true